<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="compile">
	<property environment="env" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.6" />
	<property name="source" value="1.6" />

	<property name="prjname" value="onetwo-weak" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="version" value="0.1" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="classes.dir" value="${dist.dir}/bin" />
	<property name="src.java.dir" value="${basedir}/src/java" />
	<property name="jar.file" value="${dist.dir}/${prjname}-${version}.jar" />

	<path id="compile.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="run.classpath">
		<path refid="compile.classpath" />
		<pathelement location="${classes.dir}" />
	</path>

	<target name="init">
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${classes.dir}" />
		<copy includeemptydirs="false" todir="${classes.dir}">
			<fileset dir="${src.java.dir}" excludes="**/*.launch, **/*.java" />
		</copy>
	</target>

	<target name="clean">
		<delete dir="${classes.dir}" failonerror="no" />
	</target>
	
	<target name="compile" depends="clean, init">
		<!-- 
		<javac destdir="${classes.dir}" srcdir="${src.java.dir}" excludes="/**/codegenerator/**" debug="off" encoding="utf-8">
		-->
		<javac destdir="${classes.dir}" srcdir="${src.java.dir}" debug="on" encoding="utf-8">
			<classpath refid="compile.classpath" />
		</javac>
	</target>

	<target name="jar-init">
		<delete dir="${jar.file}" failonerror="no" />
		<copy includeemptydirs="true" todir="${dist.dir}/lib">
			<fileset dir="${lib.dir}"/>
		</copy>
	</target>

	<target name="jar" depends="compile, jar-init">
		<jar destfile="${jar.file}">
			<fileset dir="${classes.dir}">
				<exclude name="**/*Test.class" />
				<exclude name="config/**" />
			</fileset>
			<manifest>
				<section name="common">
					<attribute name="Specification-Title" value="onetwo-weak" />
					<attribute name="Specification-Version" value="${version}" />
					<attribute name="Specification-Vendor" value="org.onetwo" />
					<attribute name="Implementation-Title" value="common" />
					<attribute name="Implementation-Version" value="${version}" />
					<attribute name="Implementation-Vendor" value="onetwo" />
				</section>
			</manifest>
		</jar>
	</target>

	<target name="copy-to-codegen" depends="jar">
		<copy todir="E:\mydev\java_workspace\easytime\org.onetwo.eclipse.codegen\lib" file="${jar.file}">
		</copy>
	</target>

	<target name="util_compile" depends="clean, init">
		<javac destdir="${classes.dir}" srcdir="${src.java.dir}" includes="/**/util/**" debug="off" encoding="utf-8">
		</javac>
	</target>

	<target name="util_jar" depends="compile, jar-init">
		<jar destfile="${dist.dir}/${prjname}-util-${version}.jar">
			<fileset dir="${classes.dir}">
				<exclude name="**/*Test.class" />
			</fileset>
			<manifest>
				<section name="common">
					<attribute name="Specification-Title" value="ciipp-timer" />
					<attribute name="Specification-Version" value="${version}" />
					<attribute name="Specification-Vendor" value="ciipp" />
					<attribute name="Implementation-Title" value="common" />
					<attribute name="Implementation-Version" value="${version}" />
					<attribute name="Implementation-Vendor" value="onetwo" />
				</section>
			</manifest>
		</jar>
	</target>

</project>
